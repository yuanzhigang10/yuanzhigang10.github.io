<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Peter&#39;s Blogs</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://blogs.peteryuan.net/"/>
  <updated>2017-10-28T00:39:58.000Z</updated>
  <id>http://blogs.peteryuan.net/</id>
  
  <author>
    <name>Peter Yuan</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Hello World</title>
    <link href="http://blogs.peteryuan.net/hello-world/"/>
    <id>http://blogs.peteryuan.net/hello-world/</id>
    <published>2017-10-28T00:39:58.000Z</published>
    <updated>2017-10-28T00:39:58.000Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Anaconda使用总结</title>
    <link href="http://blogs.peteryuan.net/use-anaconda/"/>
    <id>http://blogs.peteryuan.net/use-anaconda/</id>
    <published>2016-07-18T16:00:00.000Z</published>
    <updated>2019-03-12T14:22:15.018Z</updated>
    
    <content type="html"><![CDATA[<p>本文其他地址：<a href="http://www.jianshu.com/p/2f3be7781451" target="_blank" rel="noopener">简书</a> / <a href="http://python.jobbole.com/86236/" target="_blank" rel="noopener">伯乐在线</a></p><hr><h1 id="序"><a href="#序" class="headerlink" title="序"></a>序</h1><p>Python易用，但用好却不易，其中比较头疼的就是包管理和Python不同版本的问题，特别是当你使用Windows的时候。为了解决这些问题，有不少发行版的Python，比如WinPython、Anaconda等，这些发行版将python和许多常用的package打包，方便pythoners直接使用，此外，还有virtualenv、pyenv等工具管理虚拟环境。</p><p>个人尝试了很多类似的发行版，最终选择了Anaconda，因为其强大而方便的包管理与环境管理的功能。该文主要介绍下Anaconda，对Anaconda的理解，并简要总结下相关的操作。</p><h1 id="Anaconda简介与安装"><a href="#Anaconda简介与安装" class="headerlink" title="Anaconda简介与安装"></a>Anaconda简介与安装</h1><h2 id="Anaconda概述"><a href="#Anaconda概述" class="headerlink" title="Anaconda概述"></a>Anaconda概述</h2><p><a href="https://www.continuum.io/why-anaconda" target="_blank" rel="noopener">Anaconda</a>是一个用于科学计算的Python发行版，支持 Linux, OS X, Windows系统，提供了包管理与环境管理的功能，可以很方便地解决多版本python并存、切换以及各种第三方包安装问题。Anaconda利用工具/命令<code>conda</code>来进行package和environment的管理，并且已经包含了Python和相关的配套工具。</p><p>这里先解释下conda、anaconda这些概念的差别。<code>conda</code>可以理解为一个工具，也是一个可执行命令，其核心功能是<strong>包管理</strong>与<strong>环境管理</strong>。包管理与pip的使用类似，环境管理则允许用户方便地安装不同版本的python并可以快速切换。Anaconda则是一个打包的集合，里面预装好了conda、某个版本的python、众多packages、科学计算工具等等，所以也称为Python的一种发行版。其实还有Miniconda，顾名思义，它只包含最基本的内容——python与conda，以及相关的必须依赖项，对于空间要求严格的用户，Miniconda是一种选择。</p><p>进入下文之前，说明一下conda的设计理念——<strong>conda将几乎所有的工具、第三方包都当做package对待，甚至包括python和conda自身</strong>！因此，conda打破了包管理与环境管理的约束，能非常方便地安装各种版本python、各种package并方便地切换。</p><h2 id="Anaconda的安装"><a href="#Anaconda的安装" class="headerlink" title="Anaconda的安装"></a>Anaconda的安装</h2><p>Anaconda的下载页参见<a href="https://www.continuum.io/downloads" target="_blank" rel="noopener">官网下载</a>，Linux、OS X、Windows均支持。</p><p>安装时，会发现有两个不同版本的Anaconda，分别对应Python 2.7和Python 3.5，两个版本其实除了这点区别外其他都一样。后面我们会看到，安装哪个版本并不本质，因为通过环境管理，我们可以很方便地切换运行时的Python版本。（由于我常用的Python是2.7和3.4，因此倾向于直接安装Python 2.7对应的Anaconda）</p><p>下载后直接按照说明安装即可。这里想提醒一点：尽量按照Anaconda默认的行为安装——不使用root权限，仅为个人安装，安装目录设置在个人主目录下（Windows就无所谓了）。这样的好处是，同一台机器上的不同用户完全可以安装、配置自己的Anaconda，不会互相影响。</p><p>对于OS X、Linux系统，Anaconda安装好后，实际上就是在主目录下多了个文件夹（<code>~/anaconda</code>）而已，Windows会写入注册表。安装时，安装程序会把bin目录加入PATH（Linux/OS X写入<code>~/.bashrc</code>，Windows添加到系统变量PATH），这些操作也完全可以自己完成。以Linux/OS X为例，安装完成后设置PATH的操作是</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 将anaconda的bin目录加入PATH，根据版本不同，也可能是~/anaconda3/bin</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">'export PATH="~/anaconda2/bin:$PATH"'</span> &gt;&gt; ~/.bashrc</span><br><span class="line"><span class="comment"># 更新bashrc以立即生效</span></span><br><span class="line"><span class="built_in">source</span> ~/.bashrc</span><br></pre></td></tr></table></figure><p>配置好PATH后，可以通过<code>which conda</code>或<code>conda --version</code>命令检查是否正确。假如安装的是Python 2.7对应的版本，运行<code>python --version</code>或<code>python -V</code>可以得到Python 2.7.12 :: Anaconda 4.1.1 (64-bit)，也说明该发行版默认的环境是Python 2.7。</p><h1 id="Conda使用与配置"><a href="#Conda使用与配置" class="headerlink" title="Conda使用与配置"></a>Conda使用与配置</h1><h2 id="Conda的环境管理"><a href="#Conda的环境管理" class="headerlink" title="Conda的环境管理"></a>Conda的环境管理</h2><p>Conda的环境管理功能允许我们同时安装若干不同版本的Python，并能自由切换。对于上述安装过程，假设我们采用的是Python 2.7对应的安装包，那么Python 2.7就是默认的环境（默认名字是<code>root</code>，注意这个root不是超级管理员的意思）。</p><p>假设我们需要安装Python 3.4，此时，我们需要做的操作如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 创建一个名为python34的环境，指定Python版本是3.4（不用管是3.4.x，conda会为我们自动寻找3.4.x中的最新版本）</span></span><br><span class="line">conda create --name python34 python=3.4</span><br><span class="line"></span><br><span class="line"><span class="comment"># 安装好后，使用activate激活某个环境</span></span><br><span class="line">activate python34 <span class="comment"># for Windows</span></span><br><span class="line"><span class="built_in">source</span> activate python34 <span class="comment"># for Linux &amp; OS X</span></span><br><span class="line"><span class="comment"># 激活后，会发现terminal输入的地方多了python34的字样，实际上，此时系统做的事情就是把默认2.7环境从PATH中去除，再把3.4对应的命令加入PATH</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 此时，再次输入</span></span><br><span class="line">python --version</span><br><span class="line"><span class="comment"># 可以得到`Python 3.4.5 :: Anaconda 4.1.1 (64-bit)`，即系统已经切换到了3.4的环境</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 如果想返回默认的python 2.7环境，运行</span></span><br><span class="line">deactivate python34 <span class="comment"># for Windows</span></span><br><span class="line"><span class="built_in">source</span> deactivate python34 <span class="comment"># for Linux &amp; OS X</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 删除一个已有的环境</span></span><br><span class="line">conda remove --name python34 --all</span><br></pre></td></tr></table></figure><p>用户安装的不同python环境都会被放在目录<code>~/anaconda/envs</code>下，可以在命令中运行<code>conda info -e</code>查看已安装的环境，当前被激活的环境会显示有一个星号或者括号。</p><p>说明：有些用户可能经常使用python 3.4环境，因此直接把<code>~/anaconda/envs/python34</code>下面的bin或者Scripts加入PATH，去除anaconda对应的那个bin目录。这个办法，怎么说呢，也是可以的，但总觉得不是那么elegant……</p><p>如果直接按上面说的这么改PATH，你会发现conda命令又找不到了（当然找不到啦，因为conda在<code>~/anaconda/bin</code>里呢），这时候怎么办呢？方法有二：1. 显示地给出conda的绝对地址 2. 在python34环境中也安装conda工具。</p><h2 id="Conda的包管理"><a href="#Conda的包管理" class="headerlink" title="Conda的包管理"></a>Conda的包管理</h2><p>Conda的包管理就比较好理解了，这部分功能与<code>pip</code>类似。</p><p>例如，如果需要安装scipy：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 安装scipy</span></span><br><span class="line">conda install scipy</span><br><span class="line"><span class="comment"># conda会从从远程搜索scipy的相关信息和依赖项目，对于python 3.4，conda会同时安装numpy和mkl（运算加速的库）</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看已经安装的packages</span></span><br><span class="line">conda list</span><br><span class="line"><span class="comment"># 最新版的conda是从site-packages文件夹中搜索已经安装的包，不依赖于pip，因此可以显示出通过各种方式安装的包</span></span><br></pre></td></tr></table></figure><p>conda包管理一些常用的操作如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查看当前环境下已安装的包</span></span><br><span class="line">conda list</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看某个指定环境的已安装包</span></span><br><span class="line">conda list -n python34</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查找package信息</span></span><br><span class="line">conda search numpy</span><br><span class="line"></span><br><span class="line"><span class="comment"># 安装package</span></span><br><span class="line">conda install -n python34 numpy</span><br><span class="line"><span class="comment"># 如果不用-n指定环境名称，则被安装在当前活跃环境</span></span><br><span class="line"><span class="comment"># 也可以通过-c指定通过某个channel安装</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 更新package</span></span><br><span class="line">conda update -n python34 numpy</span><br><span class="line"></span><br><span class="line"><span class="comment"># 删除package</span></span><br><span class="line">conda remove -n python34 numpy</span><br></pre></td></tr></table></figure><p>前面已经提到，conda将conda、python等都视为package，因此，完全可以使用conda来管理conda和python的版本，例如</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 更新conda，保持conda最新</span></span><br><span class="line">conda update conda</span><br><span class="line"></span><br><span class="line"><span class="comment"># 更新anaconda</span></span><br><span class="line">conda update anaconda</span><br><span class="line"></span><br><span class="line"><span class="comment"># 更新python</span></span><br><span class="line">conda update python</span><br><span class="line"><span class="comment"># 假设当前环境是python 3.4, conda会将python升级为3.4.x系列的当前最新版本</span></span><br></pre></td></tr></table></figure><p>补充：如果创建新的python环境，比如3.4，运行<code>conda create -n python34 python=3.4</code>之后，conda仅安装python 3.4相关的必须项，如python, pip等，如果希望该环境像默认环境那样，安装anaconda集合包，只需要：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 在当前环境下安装anaconda包集合</span></span><br><span class="line">conda install anaconda</span><br><span class="line"></span><br><span class="line"><span class="comment"># 结合创建环境的命令，以上操作可以合并为</span></span><br><span class="line">conda create -n python34 python=3.4 anaconda</span><br><span class="line"><span class="comment"># 也可以不用全部安装，根据需求安装自己需要的package即可</span></span><br></pre></td></tr></table></figure><h2 id="设置国内镜像"><a href="#设置国内镜像" class="headerlink" title="设置国内镜像"></a>设置国内镜像</h2><p>如果需要安装很多packages，你会发现conda下载的速度经常很慢，因为Anaconda.org的服务器在国外。所幸的是，清华TUNA镜像源有Anaconda仓库的镜像，我们将其加入conda的配置即可：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 添加Anaconda的TUNA镜像</span></span><br><span class="line">conda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/free/</span><br><span class="line"><span class="comment"># TUNA的help中镜像地址加有引号，需要去掉</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置搜索时显示通道地址</span></span><br><span class="line">conda config --<span class="built_in">set</span> show_channel_urls yes</span><br></pre></td></tr></table></figure><p>执行完上述命令后，会生成<code>~/.condarc</code>(Linux/OS X)或<code>C:\Users\USER_NAME\.condarc</code>文件，记录着我们对conda的配置，直接手动创建、编辑该文件是相同的效果。</p><h1 id="跋"><a href="#跋" class="headerlink" title="跋"></a>跋</h1><p>Anaconda具有跨平台、包管理、环境管理的特点，因此很适合快速在新的机器上部署Python环境。总结而言，整套安装、配置流程如下：</p><ul><li>下载Anaconda、安装</li><li>配置PATH（bashrc或环境变量），更改TUNA镜像源</li><li>创建所需的不用版本的python环境</li><li>Just Try!</li></ul><blockquote><p>cheat-sheet 下载：<br><a href="http://conda.pydata.org/docs/_downloads/conda-cheatsheet.pdf" target="_blank" rel="noopener">Conda cheat sheet</a></p></blockquote><hr><p>参考资料</p><ul><li><a href="https://www.continuum.io/why-anaconda" target="_blank" rel="noopener">Anaconda Homepage</a></li><li><a href="https://docs.continuum.io/anaconda/index" target="_blank" rel="noopener">Anaconda Documentation</a></li><li><a href="http://conda.pydata.org/docs/index.html" target="_blank" rel="noopener">Conda Docs</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;本文其他地址：&lt;a href=&quot;http://www.jianshu.com/p/2f3be7781451&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;简书&lt;/a&gt; / &lt;a href=&quot;http://python.jobbole.com/86236/&quot;
      
    
    </summary>
    
    
      <category term="Anaconda" scheme="http://blogs.peteryuan.net/tags/Anaconda/"/>
    
      <category term="Conda" scheme="http://blogs.peteryuan.net/tags/Conda/"/>
    
      <category term="Python" scheme="http://blogs.peteryuan.net/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>文档、文案与知识管理</title>
    <link href="http://blogs.peteryuan.net/word-latex-manage/"/>
    <id>http://blogs.peteryuan.net/word-latex-manage/</id>
    <published>2016-03-30T16:00:00.000Z</published>
    <updated>2019-03-12T14:31:19.627Z</updated>
    
    <content type="html"><![CDATA[<p>注：本文为<code>文档排版与文案设计</code>（20160331）讲座讲义。 <strong>致谢声明： 本教程中LaTeX部分参考了<a href="http://dralpha.altervista.org/zh/index.htm" target="_blank" rel="noopener">LaTeX Notes (2nd)</a>和<a href="https://github.com/tuna/thulib-latex-talk" target="_blank" rel="noopener">thulib-latex-talk</a>相关内容，在此向原作者表示感谢 :)</strong></p><hr><h1 id="排版软件概述"><a href="#排版软件概述" class="headerlink" title="排版软件概述"></a>排版软件概述</h1><h2 id="Word"><a href="#Word" class="headerlink" title="Word"></a>Word</h2><ul><li>图形化界面<ul><li>所见即所得（What you see is what you get）</li></ul></li><li>日常办公、学习中应用广泛</li></ul><h2 id="LaTeX"><a href="#LaTeX" class="headerlink" title="LaTeX"></a>LaTeX</h2><ul><li>编译型排版系统</li><li>TeX<ul><li>Donald E. Knuth, 1978</li><li>TeX 3.14159265</li></ul></li><li>LaTeX<ul><li>Leslie Lamport</li></ul></li></ul><h2 id="Word-LaTeX-对比"><a href="#Word-LaTeX-对比" class="headerlink" title="Word/LaTeX 对比"></a>Word/LaTeX 对比</h2><table><thead><tr><th style="text-align:center">Microsoft® Word</th><th style="text-align:center">LaTeX</th></tr></thead><tbody><tr><td style="text-align:center">字处理工具</td><td style="text-align:center">专业排版软件</td></tr><tr><td style="text-align:center">容易上手，简单直观</td><td style="text-align:center">门槛稍高，上手后容易</td></tr><tr><td style="text-align:center">所见即所得</td><td style="text-align:center">所想即所得</td></tr><tr><td style="text-align:center">高级功能不易掌握</td><td style="text-align:center">进阶难，但一般用不到</td></tr><tr><td style="text-align:center">处理长文档需要丰富经验</td><td style="text-align:center">和短文档处理基本无异</td></tr><tr><td style="text-align:center">同时关注内容和格式</td><td style="text-align:center">仅关注内容即可</td></tr><tr><td style="text-align:center">公式排版差强人意</td><td style="text-align:center">尤其擅长公式排版</td></tr><tr><td style="text-align:center">二进制格式</td><td style="text-align:center">文本文件+编译</td></tr><tr><td style="text-align:center">付费商业许可</td><td style="text-align:center">自由免费试用</td></tr></tbody></table><h2 id="Word的使用"><a href="#Word的使用" class="headerlink" title="Word的使用"></a>Word的使用</h2><h3 id="Word基础操作"><a href="#Word基础操作" class="headerlink" title="Word基础操作"></a>Word基础操作</h3><ul><li>基本设置、自定义选项卡<ul><li>标题栏、菜单栏、工具栏、状态栏</li><li>Ribbon界面（固定/悬浮）</li><li>选项卡可以定制，但一般不太需要</li><li>键盘/鼠标快捷操作（如全选、行选、矩形框选择）</li><li>复制、粘贴（各种粘贴模式）</li></ul></li><li>视图模式<ul><li>页面视图、<strong>大纲视图</strong>（显示文章真正的内容，去掉格式的影响）</li><li>阅读视图（个人喜好）</li><li>拆分视图功能很常用（需要同时阅读文档的两个不同部分）</li></ul></li><li>导航、搜索、查找与替换<ul><li>建议打开导航窗格（新版本的Word把简单的搜索也加入导航窗格）</li><li>搜索、查找、替换（重视高级功能，如正则匹配，加快效率）</li></ul></li><li>段落、段落设置<ul><li>排版中段的概念（<strong>新起一行 != 新的一段</strong>）</li><li>段落缩进的概念</li><li>硬回车(<code>Enter</code>)与软回车(<code>Shift</code>+<code>Enter</code>)</li><li><strong>区分：段落缩进 &amp; TAB &amp; 空格</strong>（大纲视图里查看区别）</li><li>有些设置是段落意义上的，比如缩进、行间距等（段落选项卡）</li></ul></li><li>项目符号与编号<ul><li>不同级别的项目内部是依靠缩进实现的</li><li>可以设置缩进间距等参数（右键——调整列表缩进）</li><li>项目的自动编号（与样式配合使用）</li></ul></li><li>页面版式、布局<ul><li>可以调节页边距、横版竖版、分栏等</li><li>如何局部分栏（配合分节查看结果）</li></ul></li><li><strong>分页与分节</strong><ul><li>分页是物理意义上的，分节是排版意义上的</li><li>分页：软分页、硬分页（<code>Ctrl</code>+<code>Enter</code>）</li><li>分节：有些概念是针对节的，<strong>节是Word管理不同章节结构的重要机制</strong></li><li>以页码为例介绍分节，如何设置不同的页码格式</li></ul></li></ul><h3 id="Word图表使用"><a href="#Word图表使用" class="headerlink" title="Word图表使用"></a>Word图表使用</h3><blockquote><p>Word里的图形</p></blockquote><ul><li>简单图形绘制（插入——形状，复杂组合图案注意“新建绘图画布”）</li><li><code>SmartArt</code>（简单版本的<code>Visio</code>）</li><li>不要再用Word的艺术字了，真的很丑。。。</li><li>插入外源图片</li><li>图片的简单处理<ul><li>压缩！裁剪、简单扣除背景（可替代简单的PS操作）</li><li>区分：<strong>背景白/无背景</strong></li></ul></li><li>辅助软件<ul><li>PowerPoint、Visio、Photoshop</li></ul></li><li><strong>矢量图与点阵图</strong></li></ul><blockquote><p>Word里的表格</p></blockquote><ul><li>表格样式、对齐</li><li>绘图，注意区分<ul><li>区分：<strong>无边框/白色边框/擦除边框</strong></li></ul></li><li>重复标题行（属性）、从文字新建表格（快捷）</li><li>Excel——实现更为复杂的功能</li><li>表格的巧用——文字对齐（做封面等）</li></ul><blockquote><p>Word图表使用原则</p></blockquote><ul><li><strong>样式统一</strong></li><li>自动索引（演示）<ul><li>自动更新（本质上是更新域的值）</li><li>删除——“错误！未找到引用源”（类比指针的概念，失去指向的对象）</li><li>自动目录</li></ul></li><li>自定义标签（表格 -&gt; 案例）</li></ul><h3 id="Word结构化排版"><a href="#Word结构化排版" class="headerlink" title="Word结构化排版"></a>Word结构化排版</h3><ul><li>结构化排版的意识！<ul><li>文章的逻辑结构（篇、章、节）</li><li>与LaTeX中的<code>section</code>概念类比</li></ul></li><li>级别设置（默认的太丑）<ul><li>自动编号</li><li>导航窗格（可以拖拽，整体移动）</li><li>自定义不同级别格式 -&gt; 个人模板</li><li>自动索引/目录（TOC标题、目录1、目录2经常有bug…）</li><li>转pdf时会自动输出“书签”</li><li>同一级别的也有两种样式！（如带编号、不带编号）</li><li>更多操作：自己多动手试试！</li></ul></li></ul><h2 id="PowerPoint-Excel的使用"><a href="#PowerPoint-Excel的使用" class="headerlink" title="PowerPoint/Excel的使用"></a>PowerPoint/Excel的使用</h2><p>PowerPoint/Excel略讲，基本原理与Word类似。</p><h3 id="PowerPoint的使用"><a href="#PowerPoint的使用" class="headerlink" title="PowerPoint的使用"></a>PowerPoint的使用</h3><ul><li>PowerPoint到底可以做什么？<ul><li>展示（汇报、答辩、宣传）、海报、视频</li><li><code>some PowerPoint, no Power, also no Point...</code></li></ul></li><li>PPT只是你的表达的辅助，不宜过多文字，更忌念PPT的行为</li><li>不要滥用分级（超过3级听众便已很难follow）</li><li>重视<strong>幻灯片母版</strong></li><li>demo</li></ul><h3 id="Excel的使用"><a href="#Excel的使用" class="headerlink" title="Excel的使用"></a>Excel的使用</h3><ul><li>想清楚你的使用目的（展示？数据统计？）</li><li>数据统计<ul><li>按照<code>关系型数据库</code>的思维建立表格</li></ul></li><li>函数使用：SUM, AVERAGE, COUNTIF, RANK, <strong>VLOOKUP</strong></li><li>单元格的相对引用(E3)与绝对引用($E$3)</li><li>Misc:<ul><li>冻结首行，视图</li><li>文本格式与分列（避免手机号等显示时被保留截断，注意仅更改单元格格式并不起作用）</li></ul></li></ul><p>More about MS Office: VBA编程，自定义个人需求</p><h1 id="LaTeX的使用"><a href="#LaTeX的使用" class="headerlink" title="LaTeX的使用"></a>LaTeX的使用</h1><h2 id="LaTeX简介"><a href="#LaTeX简介" class="headerlink" title="LaTeX简介"></a>LaTeX简介</h2><ul><li>LaTeX是一种文字排版系统，基于TeX排版系统并由此发展而来。</li><li>LaTeX简史</li></ul><table><thead><tr><th style="text-align:center">时间</th><th style="text-align:center">关键词</th></tr></thead><tbody><tr><td style="text-align:center">1976-1978</td><td style="text-align:center">Donald E. Knuth, The Art of Programming, <code>TeX</code></td></tr><tr><td style="text-align:center">1982</td><td style="text-align:center">AMS-TeX, AMSFonts</td></tr><tr><td style="text-align:center">1984</td><td style="text-align:center">Plain TeX</td></tr><tr><td style="text-align:center">1984-1985</td><td style="text-align:center">Leslie Lamport, <code>LaTeX</code></td></tr><tr><td style="text-align:center">1989</td><td style="text-align:center">Mittelbach, LaTeX3</td></tr><tr><td style="text-align:center">1991-1993</td><td style="text-align:center">Comprehensive TeX Archive Network (CTAN)</td></tr><tr><td style="text-align:center">1994</td><td style="text-align:center"><code>LaTeX2e</code></td></tr><tr><td style="text-align:center">2007</td><td style="text-align:center">XeTeX, <code>XeLaTeX</code></td></tr></tbody></table><blockquote><p>如果将LaTeX比作一个宏伟的建筑，TeX就是它的基础，所有的TeX基本命令和扩展命令都是构成LaTeX的基础。</p></blockquote><ul><li>从排版的角度看待LaTeX（TeX是一种语言也是一个排版引擎）<ul><li>图像数据（RIP）</li><li>页面描述语言（DVI、PS、PDF）</li><li>标记语言（troff、SGML、TeX系列）</li></ul></li><li>软件准备<ul><li>遵照TeX的规范将一套实用程序打包集成在一起，形成发行版（distribution）</li></ul></li></ul><table><thead><tr><th style="text-align:center">操作系统</th><th style="text-align:center">发行版</th><th style="text-align:center">编辑器</th></tr></thead><tbody><tr><td style="text-align:center">通用</td><td style="text-align:center">TeX Live</td><td style="text-align:center">TeXworks</td></tr><tr><td style="text-align:center">Windows</td><td style="text-align:center">MikTeX</td><td style="text-align:center">TeXstudio</td></tr><tr><td style="text-align:center">Mac OS</td><td style="text-align:center">MacTeX</td><td style="text-align:center">TeXShop</td></tr></tbody></table><h2 id="LaTeX功能演示"><a href="#LaTeX功能演示" class="headerlink" title="LaTeX功能演示"></a>LaTeX功能演示</h2><ul><li><code>演示</code>TeX系统针对不同格式和引擎组合，提供了一系列命令行程序，完成不同的编译和转换功能。<ul><li>LaTeX</li><li>XeLaTeX (+ utf-8) 中文支持最好</li></ul></li><li><strong>文章的结构</strong><ul><li>part, chapter</li><li><strong>section</strong>, subsection, subsubsection</li><li>paragraph, subparagraph</li></ul></li><li>各种功能演示<ul><li>文本、公式、字体、版面、表格、插图</li></ul></li><li>幻灯片制作<ul><li><code>\documentclass{beamer}</code></li></ul></li><li>再谈结构化与模板<ul><li>模板：已经设计好的格式框架</li><li>使用户专注于内容</li></ul></li><li>MS Word<ul><li>很少有人有意识地在Word中使用模板</li><li>自定义、自动化</li><li>学习LaTeX能够帮助自己更科学地使用Word</li></ul></li></ul><h2 id="LaTeX学习资料"><a href="#LaTeX学习资料" class="headerlink" title="LaTeX学习资料"></a>LaTeX学习资料</h2><ul><li>学习资料推荐<ul><li><a href="http://www.ctan.org" target="_blank" rel="noopener">CTAN HomePage</a></li><li><a href="http://www.ctex.org/HomePage" target="_blank" rel="noopener">CTeX HomePage</a></li><li>The Not So Short Introduction to LaTeX2e (lshort) <a href="http://www.ctan.org/tex-archive/info/lshort" target="_blank" rel="noopener">[home]</a> <a href="http://mirrors.ctan.org/info/lshort/english/lshort.pdf" target="_blank" rel="noopener">[lshort-en.pdf]</a> <a href="http://mirrors.ctan.org/info/lshort/chinese/lshort-zh-cn.pdf" target="_blank" rel="noopener">[lshort-zh-cn.pdf]</a></li><li>LaTeX Notes (2nd) <a href="http://dralpha.altervista.org/zh/tech/lnotes2.pdf" target="_blank" rel="noopener">[pdf]</a> <a href="http://dralpha.altervista.org/zh/tech/lnotes2.zip" target="_blank" rel="noopener">[src]</a></li><li>LaTeX入门, 刘海洋(milksea)</li><li>利用好各种文档</li></ul></li><li>常见问题<ul><li><code>编译不通过</code> 缺少必要宏包，命令拼写错误，括号未配对等</li><li><code>表格图片乱跑</code> LaTeX自身的浮动定位算法</li><li><code>段落间距变大</code> LaTeX排版算法</li></ul></li></ul><h1 id="文案与知识管理"><a href="#文案与知识管理" class="headerlink" title="文案与知识管理"></a>文案与知识管理</h1><blockquote><p>有道无术，术尚可求；有术无道，则止于术。</p></blockquote><h2 id="“道”——文案设计的原则"><a href="#“道”——文案设计的原则" class="headerlink" title="“道”——文案设计的原则"></a>“道”——文案设计的原则</h2><ul><li>形式<ul><li>结构化排版</li><li>模板、文档规范</li><li>简洁大方（不使用过于复杂的格式）</li><li>尽量使用文字大小区别级别，避免过多字体</li><li>空行与段间距（避免手工）</li></ul></li><li>内容<ul><li>书面语言，注意用语正式（场合）</li><li>话说到刚刚好，不假不空不啰嗦</li><li><strong>言简、意赅、理明</strong></li><li><strong>换位思考</strong>，文案面向的对象</li><li>语言是否合适，表述是否有歧义（审阅）</li></ul></li><li>再谈Word/LaTeX<ul><li>设计理念：内容与格式分离，编辑与编译分离</li><li>软件：<strong>最大内聚，最小耦合</strong>——一个程序只需要做好一件事</li><li>好的排版软件应当让用户专注于内容，而非格式</li><li>推荐关注<code>Markdown</code></li></ul></li></ul><h2 id="个人知识管理"><a href="#个人知识管理" class="headerlink" title="个人知识管理"></a>个人知识管理</h2><ul><li>软件协作<ul><li>文档：Word, LaTeX, Markdown</li><li>公式：LaTeX, MathType</li><li>绘图：PowerPoint, Excel, Visio, Adobe Ps</li><li>数据：Excel, Access, MySQL</li><li>展示：PowerPoint, Keynote, Prezi</li><li>设计：PowerPoint, Adobe Series</li><li>文献：EndNote, NoteExpress, Mendeley</li></ul></li><li>知识管理<ul><li>备份意识：网盘, Git/SVN</li><li>你真的一定需要文档么？<ul><li>笔记：Evernote, Youdao, OneNote</li><li>导图：MindManager</li></ul></li></ul></li><li>再谈软件与工具<ul><li>精益求精</li><li>知识再整合带来的效益</li><li>工具永远只是工具，不要被工具反束缚</li></ul></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;注：本文为&lt;code&gt;文档排版与文案设计&lt;/code&gt;（20160331）讲座讲义。 &lt;strong&gt;致谢声明： 本教程中LaTeX部分参考了&lt;a href=&quot;http://dralpha.altervista.org/zh/index.htm&quot; target=&quot;_blan
      
    
    </summary>
    
    
      <category term="Word" scheme="http://blogs.peteryuan.net/tags/Word/"/>
    
      <category term="LaTeX" scheme="http://blogs.peteryuan.net/tags/LaTeX/"/>
    
      <category term="排版" scheme="http://blogs.peteryuan.net/tags/%E6%8E%92%E7%89%88/"/>
    
      <category term="文案" scheme="http://blogs.peteryuan.net/tags/%E6%96%87%E6%A1%88/"/>
    
  </entry>
  
</feed>
